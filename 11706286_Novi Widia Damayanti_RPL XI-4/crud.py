# Novi Widia Damayanti - RPL XI-4

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QPushButton, QWidget
import pymysql

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.koneksi()
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(469, 265)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 50, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(40, 20, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(40, 80, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.simpan = QtWidgets.QPushButton(self.centralwidget)
        self.simpan.setGeometry(QtCore.QRect(40, 160, 75, 23))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(211, 211, 211))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.simpan.setPalette(palette)
        self.simpan.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.simpan.setDefault(False)
        self.simpan.setFlat(False)
        self.simpan.setObjectName("simpan")
        self.simpan.clicked.connect(self.save)
        self.nis = QtWidgets.QLineEdit(self.centralwidget)
        self.nis.setGeometry(QtCore.QRect(110, 20, 161, 20))
        self.nis.setObjectName("nis")
        self.nama = QtWidgets.QLineEdit(self.centralwidget)
        self.nama.setGeometry(QtCore.QRect(110, 50, 241, 20))
        self.nama.setObjectName("nama")
        self.alamat = QtWidgets.QTextEdit(self.centralwidget)
        self.alamat.setGeometry(QtCore.QRect(110, 90, 241, 41))
        self.alamat.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.alamat.setObjectName("alamat")
        self.update = QtWidgets.QPushButton(self.centralwidget)
        self.update.setGeometry(QtCore.QRect(120, 160, 75, 23))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(211, 211, 211))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.update.setPalette(palette)
        self.update.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.update.setDefault(False)
        self.update.setFlat(False)
        self.update.setObjectName("update")
        self.update.clicked.connect(self.ubah)
        self.hapus = QtWidgets.QPushButton(self.centralwidget)
        self.hapus.setGeometry(QtCore.QRect(200, 160, 75, 23))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(211, 211, 211))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.hapus.setPalette(palette)
        self.hapus.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.hapus.setDefault(False)
        self.hapus.setFlat(False)
        self.hapus.setObjectName("hapus")
        self.hapus.clicked.connect(self.delete)
        self.clear = QtWidgets.QPushButton(self.centralwidget)
        self.clear.setGeometry(QtCore.QRect(280, 160, 75, 23))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(211, 211, 211))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.clear.setPalette(palette)
        self.clear.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.clear.setDefault(False)
        self.clear.setFlat(False)
        self.clear.setObjectName("clear")
        self.clear.clicked.connect(self.bersih)
        self.check = QtWidgets.QPushButton(self.centralwidget)
        self.check.setGeometry(QtCore.QRect(280, 20, 71, 23))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(211, 211, 211))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.check.setPalette(palette)
        self.check.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.check.setDefault(False)
        self.check.setFlat(False)
        self.check.setObjectName("check")
        self.check.clicked.connect(self.tampil)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 469, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Nama"))
        self.label_2.setText(_translate("MainWindow", "NIS"))
        self.label_3.setText(_translate("MainWindow", "Alamat"))
        self.simpan.setText(_translate("MainWindow", "Simpan"))
        self.update.setText(_translate("MainWindow", "Update"))
        self.hapus.setText(_translate("MainWindow", "Hapus"))
        self.clear.setText(_translate("MainWindow", "Clear"))
        self.check.setText(_translate("MainWindow", "Check"))

    def koneksi(self):
        con = pymysql.connect(db='db_python', user='root', passwd='root', host='localhost', port=3306, autocommit=True)
        cur = con.cursor()
        if(cur):
            self.messagebox("Koneksi", "Koneksi Berhasil")
        else:
            self.messagebox("Koneksi", "Koneksi Gagal")

    def messagebox(self, title, message):
        mess = QtWidgets.QMessageBox()
        mess.setWindowTitle(title)
        mess.setText(message)
        mess.setStandardButtons(QtWidgets.QMessageBox.Ok)
        mess.exec_()

    def save(self):
        nis = self.nis.text()
        nama = self.nama.text()
        alamat = self.alamat.toPlainText()
        insert = (nis,nama,alamat)
        print(insert)
        con = pymysql.connect(db='db_python', user='root', passwd='root', host='localhost', port=3306, autocommit=True)
        cur = con.cursor()
        sql = "INSERT INTO siswa(nis,nama,alamat)" + "VALUES" + str(insert)
        data = cur.execute(sql)
        if(data):
            self.messagebox("SUKSES", "Data Siswa Tersimpan")
        else:
            self.messagebox("GAGAL", "Data Siswa Gagal Tersimpan")

    def tampil(self):
        nis = self.nis.text()
        con = pymysql.connect(db='db_python', user='root', passwd='root', host='localhost', port=3306, autocommit=True)
        cur = con.cursor()
        cur.execute("SELECT * FROM siswa WHERE nis='"+str(nis)+"'")
        data = cur.fetchall()
        if(data):
            for tp in data:
                self.nis.setText(""+tp[0])
                self.nama.setText(""+tp[1])
                self.alamat.setText(""+tp[2])
                self.messagebox("INFO","Ini Adalah Data Anda")
        else:
            self.messagebox("INFO","Data Belum Ada")

    def ubah(self):
        nis = self.nis.text()
        nama = self.nama.text()
        alamat = self.alamat.toPlainText()
        insert = (nis,nama,alamat)
        print(insert)
        con = pymysql.connect(db='db_python', user='root', passwd='root', host='localhost', port=3306, autocommit=True)
        cur = con.cursor()
        sql = "UPDATE siswa SET nama=%s, alamat=%s WHERE nis=%s"
        data = cur.execute(sql, (nama,alamat,nis))
        if(data):
            self.messagebox("SUKSES", "Data Berhasil Di Update")
        else:
            self.messagebox("Gagal", "Data Gagal Di Update")

    def delete(self):
        nis = self.nis.text()
        nama = self.nama.text()
        alamat = self.alamat.toPlainText()
        insert = (nis,nama,alamat)
        print(insert)
        con = pymysql.connect(db='db_python', user='root', passwd='root', host='localhost', port=3306, autocommit=True)
        cur = con.cursor()
        sql = "DELETE FROM siswa WHERE nis=%s"
        data = cur.execute(sql, (nis))
        if(data):
            self.messagebox("SUKSES", "Data Berhasil Di Hapus")
        else:
            self.messagebox("Gagal", "Data Gagal Di Hapus")

    def bersih(self):
        self.nis.clear()
        self.nama.clear()
        self.alamat.clear()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

# 19 Desember 2018